package buy.your.dream.motostore.Controllers;

import buy.your.dream.motostore.entity.Motorcycle;
import buy.your.dream.motostore.entity.MotorcycleRepository;
import buy.your.dream.motostore.entity.User;
import buy.your.dream.motostore.entity.UserRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

@Controller    // This means that this class is a Controller
@RequestMapping(path="/motoStore") // This means URL's start with /demo (after Application path)
public class MainController {
	@Autowired // This means to get the bean called userRepository
	           // Which is auto-generated by Spring, we will use it to handle the data
	private UserRepository userRepository;

	@Autowired
	private MotorcycleRepository motoRepo;
	
	@GetMapping(path="/addUser") // Map ONLY GET Requests
	public @ResponseBody
    String addNewUser (@RequestParam String name
			, @RequestParam String email) {
		// @ResponseBody means the returned String is the response, not a view name
		// @RequestParam means it is a parameter from the GET or POST request
		
		User n = new User();
		n.setName(name);
		n.setEmail(email);
		userRepository.save(n);
		return "User Saved";
	}
	
	@GetMapping(path="/allUsers")
	public @ResponseBody
    Iterable<User> getAllUsers() {
		// This returns a JSON or XML with the users
		return userRepository.findAll();
	}

	@GetMapping(path="/addMot") // Map ONLY GET Requests
	public @ResponseBody
	String addNewMoto (@RequestParam String brand,
					   @RequestParam String model,
					   @RequestParam String motoClass,
					   @RequestParam int engine,
					   @RequestParam int topSpeed,
					   @RequestParam String info) {
		// @ResponseBody means the returned String is the response, not a view name
		// @RequestParam means it is a parameter from the GET or POST request

		Motorcycle mot = new Motorcycle();
		mot.setBrand(brand);
		mot.setModel(model);
		mot.setMotoClass(motoClass);
		mot.setEngine(engine);
		mot.setTopSpeed(topSpeed);
		mot.setInfo(info);
		motoRepo.save(mot);
		return "Motorcycle Saved";
	}

	@GetMapping(path="/allMoto")
	public @ResponseBody
	Iterable<Motorcycle> getAllMotorcycle() {
		// This returns a JSON or XML with the users
		return motoRepo.findAll();
	}
}
